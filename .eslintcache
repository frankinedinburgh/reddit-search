[{"/Users/frankhague/sites/wp-engine-reddit/src/App.js":"1","/Users/frankhague/sites/wp-engine-reddit/src/Components/Search.js":"2","/Users/frankhague/sites/wp-engine-reddit/src/index.js":"3","/Users/frankhague/sites/wp-engine-reddit/src/Components/Post.js":"4","/Users/frankhague/sites/wp-engine-reddit/src/Actions/reddit.js":"5","/Users/frankhague/sites/wp-engine-reddit/src/Components/Pagination.js":"6"},{"size":321,"mtime":1612039588675,"results":"7","hashOfConfig":"8"},{"size":4478,"mtime":1612040729558,"results":"9","hashOfConfig":"8"},{"size":548,"mtime":1611929751336,"results":"10","hashOfConfig":"8"},{"size":748,"mtime":1612027244172,"results":"11","hashOfConfig":"8"},{"size":261,"mtime":1612027496797,"results":"12","hashOfConfig":"8"},{"size":846,"mtime":1612086571261,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"teltr2",{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/frankhague/sites/wp-engine-reddit/src/App.js",[],"/Users/frankhague/sites/wp-engine-reddit/src/Components/Search.js",["29","30","31","32","33"],"import React, { useState, useEffect, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, InputGroup, Icon, List, Loader, FlexboxGrid } from \"rsuite\";\nimport Post from \"./Post\";\nimport Pagination from \"./Pagination\";\nimport reddit from \"../Actions/reddit\";\n\nconst styles = {\n  width: 300,\n  marginBottom: 10,\n};\n\nconst initialState = { count: 0 };\n\nfunction reducer(state, action) {\n  console.log(state);\n  //   if (state.count < 2) return;\n  switch (action.type) {\n    case \"next\":\n      return { count: state.count + 1 };\n    case \"prev\":\n      return { count: state.count - 1 };\n    default:\n      throw new Error();\n  }\n}\n\nconst Search = ({ query, limit }) => {\n  const [prev, setPrev] = useState(false);\n  const [next, setNext] = useState(false);\n  const [prevPage, setPrevPage] = useState(\"\");\n  const [nextPage, setNextPage] = useState(\"\");\n  const [subreddit, setSubreddit] = useState(query);\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [activePage, setActivePage] = useState(0);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // https://iq.opengenus.org/get-list-of-posts-using-reddit-api/\n  // https://www.youtube.com/watch?v=rP-ZARMGY10\n  // https://github.com/reddit-archive/reddit/wiki/JSON\n\n  const fetchItems = (endpoint) => {\n    setIsLoading(true);\n    reddit\n      .search(endpoint)\n      .then((items) => {\n        const { after, before, children } = items.data;\n        setData(children);\n        // setActivePage(1);\n        if (after && after !== nextPage) {\n          setNext(true);\n          setNextPage(after);\n        }\n\n        if (!before && activePage > 1) {\n          debugger;\n          setPrev(true);\n          // issue with prev failing to get value for before when past the first page\n          // another way to fix this is to set the count to a high number e.g 555\n          setPrevPage(children[children.length - 1].data.id);\n        }\n\n        if (before && before !== prevPage) {\n          setPrev(true);\n          setPrevPage(before);\n        }\n      })\n      .catch((err) => {\n        return;\n      });\n    setIsLoading(false);\n  };\n\n  const onNextHandler = () => {\n    fetchItems(\n      `https://www.reddit.com/r/${subreddit}.json?limit=${limit}&after=${nextPage}&count=555&sort=new`\n    );\n    setActivePage(activePage + 1);\n  };\n\n  const onPrevHandler = () => {\n    if (activePage <= 1) {\n      setPrev(false);\n      return;\n    }\n    fetchItems(\n      `https://www.reddit.com/r/${subreddit}.json?limit=${limit}&before=${prevPage}&count=555&sort=new`\n    );\n    setActivePage(activePage - 1);\n  };\n\n  // understanding the listings pagination api in reddit\n  // https://www.reddit.com/r/redditdev/comments/2uymft/help_please_re_after_and_before_in_api/\n\n  //   www.reddit.com/r/subreddit/new.json?limit=100&before=t3_xyzzy\n\n  // https://github.com/reddit-archive/reddit/wiki/JSON\n  // https://www.reddit.com/r/redditdev/comments/d8zl00/another_after_and_before_question/\n  useEffect(() => {\n    fetchItems(\n      `https://www.reddit.com/r/${subreddit}.json?limit=${limit}&sort=new`\n    );\n    setActivePage(1);\n  }, [subreddit]);\n\n  return (\n    <div>\n      <p>{activePage}</p>\n      <FlexboxGrid justify=\"space-around\">\n        <FlexboxGrid.Item>\n          <InputGroup inside style={styles}>\n            <Input\n              name={\"search\"}\n              type={\"search\"}\n              defaultValue={subreddit}\n              onChange={setSubreddit}\n            />\n            <InputGroup.Addon>\n              <Icon icon=\"search\" />\n            </InputGroup.Addon>\n          </InputGroup>\n        </FlexboxGrid.Item>\n\n        <FlexboxGrid.Item>\n          {data && (\n            <Pagination\n              prev={prev}\n              next={next}\n              onNextHandler={onNextHandler}\n              onPrevHandler={onPrevHandler}\n            />\n          )}\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n\n      {isLoading && <Loader size=\"lg\" center={true} backdrop={true} />}\n\n      {data && (\n        <List hover>\n          {data.map((post, index) => (\n            <List.Item key={`${post.data.id}${index}`} index={index + 1}>\n              <Post key={`${post.data.id}${index}`} post={post.data} />\n            </List.Item>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  query: PropTypes.string,\n  limit: PropTypes.number,\n};\n\nexport default Search;\n","/Users/frankhague/sites/wp-engine-reddit/src/index.js",[],"/Users/frankhague/sites/wp-engine-reddit/src/Components/Post.js",["34"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FlexboxGrid, Avatar } from \"rsuite\";\n\nconst styleCenter = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"60px\",\n};\n\nconst Post = ({ post }) => {\n  //   console.log(post);\n  const { title, permalink, thumbnail } = post;\n  return (\n    <FlexboxGrid>\n      <FlexboxGrid.Item colspan={2} style={styleCenter}>\n        <Avatar src={thumbnail} alt={title} />\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={8}>\n        <a href={`https://reddit.com/${permalink}`} target=\"_blank\">\n          {title}\n        </a>\n      </FlexboxGrid.Item>\n    </FlexboxGrid>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default Post;\n","/Users/frankhague/sites/wp-engine-reddit/src/Actions/reddit.js",["35"],"export default {\n  search: function (endpoint) {\n    return fetch(endpoint)\n      .then((response) => {\n        if (response.status !== 200) {\n          return;\n        }\n        return response.json();\n      })\n      .catch((err) => console.log(err));\n  },\n};\n","/Users/frankhague/sites/wp-engine-reddit/src/Components/Pagination.js",[],{"ruleId":"36","severity":1,"message":"37","line":36,"column":10,"nodeType":"38","messageId":"39","endLine":36,"endColumn":15},{"ruleId":"36","severity":1,"message":"40","line":36,"column":17,"nodeType":"38","messageId":"39","endLine":36,"endColumn":25},{"ruleId":"36","severity":1,"message":"41","line":39,"column":10,"nodeType":"38","messageId":"39","endLine":39,"endColumn":15},{"ruleId":"36","severity":1,"message":"42","line":39,"column":17,"nodeType":"38","messageId":"39","endLine":39,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":107,"column":6,"nodeType":"45","endLine":107,"endColumn":17,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":21,"column":53,"nodeType":"49","endLine":21,"endColumn":68},{"ruleId":"50","severity":1,"message":"51","line":1,"column":1,"nodeType":"52","endLine":12,"endColumn":3},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchItems' and 'limit'. Either include them or remove the dependency array.","ArrayExpression",["53"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"54","fix":"55"},"Update the dependencies array to be: [fetchItems, limit, subreddit]",{"range":"56","text":"57"},[3205,3216],"[fetchItems, limit, subreddit]"]